;; -*- mode: lisp -*-

(setf *disassembler*
      (lambda (p)
        (let ((class (make-pathname :name (pathname-name p)))
              (path (namestring (make-pathname :defaults p
                                               :name nil
                                               :type nil))))
          (format nil "javap -c -l -verbose -classpath ~A ~A" path class))))



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; update the source location of all the abcl's symbols
;;
;; see http://trac.common-lisp.net/armedbear/ticket/301 for details
;; 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(in-package :cl-user)

(defpackage "INIT-TEMP" (:use :cl))

(in-package "INIT-TEMP")

(defparameter *cannot-resolve* '(SYSTEM::CLASS-DIRECT-SLOTS
                                 SYSTEM:COMPUTE-CLASS-DIRECT-SLOTS
                                 SYSTEM:MAKE-FORWARD-REFERENCED-CLASS
                                 COMMON-LISP::%SET-STREAM-EXTERNAL-FORMAT
                                 COMMON-LISP::%IMPORT
                                 COMMON-LISP::%DELETE-PACKAGE
                                 ))

(defun change-path (symbol abcl-base)
  ;; skip the symbols that cannot be resolved
  (when (find symbol *cannot-resolve* :test 'eq)
    (return-from change-path))

  ;; ensure the symbol is loaded
  (when (extensions:autoloadp symbol)
    (extensions:resolve symbol))
  
  ;; currently, the physical path of the source is #P"L:/abcl-src-1.1.1/src/org/armedbear/lisp/precompiler.lisp"
  (let (orig-source-path)
    (when (and
           (setq orig-source-path
                 (car (getf (symbol-plist symbol) 'SYSTEM::%SOURCE)))
           (string= "L" (pathname-device orig-source-path))
           (eq :absolute
               (first (pathname-directory orig-source-path)))
           (string= "abcl-src-1.1.1"
                    (second (pathname-directory orig-source-path))))
      (setf (car (getf (symbol-plist symbol) 'SYSTEM::%SOURCE))
            (make-pathname :defaults abcl-base
                           :directory (concatenate 'list
                                                   (pathname-directory abcl-base)
                                                   (copy-list (cddr (pathname-directory orig-source-path))))
                           :name (pathname-name orig-source-path)
                           :type (pathname-type orig-source-path))))))

;; change the source localtions of all the symbols
(defun fix-all-symbols ()
  (let ((abcl-base (make-pathname :name nil :type nil :defaults (merge-pathnames "../" (first (pathname-device extensions:*lisp-home*))))))
    (do-all-symbols (sym)
      (change-path sym abcl-base))))

(fix-all-symbols)

(delete-package "INIT-TEMP")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;